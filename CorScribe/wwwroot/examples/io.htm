<!DOCTYPE html>
<html>
  <head>

      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
      <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
      <meta charset="utf-8" />

      <meta http-equiv="cache-control" content="max-age=0" />
      <meta http-equiv="cache-control" content="no-cache" />
      <meta http-equiv="expires" content="0" />
      <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
      <meta http-equiv="pragma" content="no-cache" />
    <title>Scribe</title>
      <!--
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=10.00, user-scalable=yes" />
    -->
      <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=0.00, maximum-scale=10.00, user-scalable=yes" />

      <style>
          * {
              box-sizing: border-box;
          }

          .toolbar {
              margin-bottom: 1em;
          }

          button {
              height: 3em;
          }

              button.active {
                  border-style: inset;
              }

          .scribe {
              height: 370px;
              overflow: auto;
              margin-bottom: 1em;
              border: 1px solid hsl(0, 0%, 80%);
              padding: 0.5em;
          }

          .scribe-html {
              width: 100%;
              font-family: monospace;
              border: 1px solid hsl(0, 0%, 80%);
              padding: 0.5em;
          }

          p {
              margin-top: 0;
          }
      </style>
  </head>

  <body>
    <h1>Scribe</h1>
    <div class="toolbar">
      <button data-command-name="bold">Bold</button>
      <button data-command-name="italic">Italic</button>
      <button data-command-name="underline">Underline</button>
      <button data-command-name="strikeThrough">Strike Through</button>
      <button data-command-name="removeFormat">Remove Formatting</button>
      <button data-command-name="linkPrompt">Link</button>
      <button data-command-name="unlink">Unlink</button>
      <button data-command-name="insertOrderedList">Ordered List</button>
      <button data-command-name="insertUnorderedList">Unordered List</button>
      <button data-command-name="indent">Indent</button>
      <button data-command-name="outdent">Outdent</button>
      <button data-command-name="blockquote">Blockquote</button>
      <button data-command-name="code">Code</button>
      <button data-command-name="h2">H2</button>
      <button data-command-name="undo">Undo</button>
      <button data-command-name="redo">Redo</button>
      <button data-command-name="cleanup">Clean</button>
    </div>
    <div class="scribe"></div>
    <h2>Output</h2>
    <textarea class="scribe-html" rows="15" readonly></textarea>


      <script>

          if (typeof Object.assign != 'function')
          {
              console.log("noass");
              // Must be writable: true, enumerable: false, configurable: true
              Object.defineProperty(Object, "assign", {
                  value: function assign(target, varArgs)
                  { // .length of function is 2
                      'use strict';
                      if (target == null)
                      { // TypeError if undefined or null
                          throw new TypeError('Cannot convert undefined or null to object');
                      }

                      var to = Object(target);

                      for (var index = 1; index < arguments.length; index++)
                      {
                          var nextSource = arguments[index];

                          if (nextSource != null)
                          { // Skip over if undefined or null
                              for (var nextKey in nextSource)
                              {
                                  // Avoid bugs when hasOwnProperty is shadowed
                                  if (Object.prototype.hasOwnProperty.call(nextSource, nextKey))
                                  {
                                      to[nextKey] = nextSource[nextKey];
                                  }
                              }
                          }
                      }
                      return to;
                  },
                  writable: true,
                  configurable: true
              });
          }

      </script>
      <!--
    <script src="../scribe-editor/requirejs/require.js" data-main="./example"></script>
          -->
  </body>
</html>
